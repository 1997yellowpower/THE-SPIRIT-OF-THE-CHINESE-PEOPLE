// Source : homework of data structure
// Number : **
// Author : HL
// Date   : 2018-09-15
// Kill   : **

/********************************************************************************** 
题目描述
给你六种面额1、5、10、20、50、100元的纸币，假设每种币值的数量都足够多，编写程序求组成N元（N为0-10000的非负整数）的不同组合的个数。
输入描述:
输入为一个数字N，即需要拼凑的面额
输出描述:
输出也是一个数字，为组成N的组合个数。
示例1
输入
5
输出
2
**********************************************************************************/

#include <iostream>

using namespace std;

int main() {
    int money[6] = {1, 5, 10, 20, 50, 100};
    int N, i, j;
    cin >> N;
    if (N < 0 || N > 10000)
        return 0;
    long long *dp = new long long[N + 1];
    dp[0] = 1;
    for (i = 1; i < N + 1; i++) {
        dp[i] = 0;
    }
    for (i = 0; i < 6; i++) {
        for (j = 1; j <= N; j++) {
            if (j >= money[i]) {
                dp[j] += dp[j - money[i]];
            }
        }
    }
    cout << dp[N] << endl;
    
    return 0;
}
